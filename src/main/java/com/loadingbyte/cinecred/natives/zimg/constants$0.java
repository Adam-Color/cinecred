// Generated by jextract

package com.loadingbyte.cinecred.natives.zimg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$0 {

    static final FunctionDescriptor zimg_get_version_info$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle zimg_get_version_info$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_get_version_info",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$0.zimg_get_version_info$FUNC, false
    );
    static final FunctionDescriptor zimg_get_api_version$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle zimg_get_api_version$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_get_api_version",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$0.zimg_get_api_version$FUNC, false
    );
    static final FunctionDescriptor zimg_get_last_error$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle zimg_get_last_error$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_get_last_error",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$0.zimg_get_last_error$FUNC, false
    );
    static final FunctionDescriptor zimg_clear_last_error$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle zimg_clear_last_error$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_clear_last_error",
        "()V",
        constants$0.zimg_clear_last_error$FUNC, false
    );
    static final FunctionDescriptor zimg_select_buffer_mask$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle zimg_select_buffer_mask$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_select_buffer_mask",
        "(I)I",
        constants$0.zimg_select_buffer_mask$FUNC, false
    );
    static final FunctionDescriptor zimg_filter_graph_callback$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
}


