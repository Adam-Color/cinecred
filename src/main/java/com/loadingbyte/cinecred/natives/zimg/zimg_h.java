// Generated by jextract

package com.loadingbyte.cinecred.natives.zimg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class zimg_h  {

    static {
    }

    static final SymbolLookup LIBRARIES = RuntimeHelper.lookup();    /* package-private */ zimg_h() {}
    public static MethodHandle zimg_get_last_error$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_get_last_error$MH,"zimg_get_last_error");
    }
    public static int zimg_get_last_error ( Addressable err_msg,  long n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_get_last_error$MH, "zimg_get_last_error");
        try {
            return (int)mh$.invokeExact(err_msg.address(), n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ZIMG_CPU_AUTO_64B() {
        return (int)2L;
    }
    public static int ZIMG_PIXEL_BYTE() {
        return (int)0L;
    }
    public static int ZIMG_PIXEL_WORD() {
        return (int)1L;
    }
    public static int ZIMG_RANGE_LIMITED() {
        return (int)0L;
    }
    public static int ZIMG_RANGE_FULL() {
        return (int)1L;
    }
    public static int ZIMG_COLOR_RGB() {
        return (int)1L;
    }
    public static int ZIMG_COLOR_YUV() {
        return (int)2L;
    }
    public static int ZIMG_ALPHA_NONE() {
        return (int)0L;
    }
    public static int ZIMG_ALPHA_STRAIGHT() {
        return (int)1L;
    }
    public static int ZIMG_MATRIX_RGB() {
        return (int)0L;
    }
    public static int ZIMG_MATRIX_BT709() {
        return (int)1L;
    }
    public static int ZIMG_MATRIX_BT470_BG() {
        return (int)5L;
    }
    public static int ZIMG_TRANSFER_BT709() {
        return (int)1L;
    }
    public static int ZIMG_TRANSFER_IEC_61966_2_1() {
        return (int)13L;
    }
    public static MethodHandle zimg_filter_graph_free$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_free$MH,"zimg_filter_graph_free");
    }
    public static void zimg_filter_graph_free ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_free$MH, "zimg_filter_graph_free");
        try {
            mh$.invokeExact(ptr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle zimg_filter_graph_get_tmp_size$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_get_tmp_size$MH,"zimg_filter_graph_get_tmp_size");
    }
    public static int zimg_filter_graph_get_tmp_size ( Addressable ptr,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_get_tmp_size$MH, "zimg_filter_graph_get_tmp_size");
        try {
            return (int)mh$.invokeExact(ptr.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle zimg_filter_graph_process$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_process$MH,"zimg_filter_graph_process");
    }
    public static int zimg_filter_graph_process ( Addressable ptr,  Addressable src,  Addressable dst,  Addressable tmp,  Addressable unpack_cb,  Addressable unpack_user,  Addressable pack_cb,  Addressable pack_user) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_filter_graph_process$MH, "zimg_filter_graph_process");
        try {
            return (int)mh$.invokeExact(ptr.address(), src.address(), dst.address(), tmp.address(), unpack_cb.address(), unpack_user.address(), pack_cb.address(), pack_user.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle zimg_image_format_default$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_image_format_default$MH,"zimg_image_format_default");
    }
    public static void zimg_image_format_default ( Addressable ptr,  int version) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_image_format_default$MH, "zimg_image_format_default");
        try {
            mh$.invokeExact(ptr.address(), version);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle zimg_graph_builder_params_default$MH() {
        return RuntimeHelper.requireNonNull(constants$0.zimg_graph_builder_params_default$MH,"zimg_graph_builder_params_default");
    }
    public static void zimg_graph_builder_params_default ( Addressable ptr,  int version) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.zimg_graph_builder_params_default$MH, "zimg_graph_builder_params_default");
        try {
            mh$.invokeExact(ptr.address(), version);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle zimg_filter_graph_build$MH() {
        return RuntimeHelper.requireNonNull(constants$1.zimg_filter_graph_build$MH,"zimg_filter_graph_build");
    }
    public static MemoryAddress zimg_filter_graph_build ( Addressable src_format,  Addressable dst_format,  Addressable params) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.zimg_filter_graph_build$MH, "zimg_filter_graph_build");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(src_format.address(), dst_format.address(), params.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ZIMG_API_VERSION() {
        return (int)516L;
    }
    public static int ZIMG_PRIMARIES_709() {
        return (int)1L;
    }
    public static int ZIMG_BUFFER_MAX() {
        return (int)4294967295L;
    }
}


