// Generated by jextract

package com.loadingbyte.cinecred.natives.zimg;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$2 {

    static final FunctionDescriptor zimg_image_format_default$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle zimg_image_format_default$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_image_format_default",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$2.zimg_image_format_default$FUNC, false
    );
    static final FunctionDescriptor zimg_graph_builder_params_default$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle zimg_graph_builder_params_default$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_graph_builder_params_default",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$2.zimg_graph_builder_params_default$FUNC, false
    );
    static final FunctionDescriptor zimg_filter_graph_build$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle zimg_filter_graph_build$MH = RuntimeHelper.downcallHandle(
        zimg_h.LIBRARIES, "zimg_filter_graph_build",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$2.zimg_filter_graph_build$FUNC, false
    );
    static final MemoryAddress NULL$ADDR = MemoryAddress.ofLong(0L);
}


